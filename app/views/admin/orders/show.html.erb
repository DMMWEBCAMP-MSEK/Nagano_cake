    <div class="d-block p-2 ml-5">注文履歴詳細</div>
    <table class="d-block p-2 ml-5">
      <%= render "layouts/errors", obj: @order %>
      <tr>
        <th>購入者</th>
        <td><%= @order.customer.last_name %> <%= @order.customer.first_name %></td>
      </tr>
      <tr>
        <th>注文日</th>
        <td><%= @order.created_at.strftime("%Y/%m/%d") %></td>
      </tr>
      <tr>
        <th class="d-flex align-items-start">配送先</th>
        <td>
          〒<%= @order.post_code %> <%= @order.address %><br>
          <%= @order.name %>
        </td>
      </tr>
      <tr>
        <th>支払方法</th>
        <td>
          <%# if @order.payment_method == 0 %>
          <!-- クレジットカード -->
          <%# elsif @order.payment_method == 1 %>
          <!--  銀行振込 -->
          <%# else %>
          <%# end %>
          <%= @order.payment_method_i18n %>
          </td>
      </tr>
      <tr>
        <th>注文ステータス</th>
        <td>
          <%= form_with model:@order, url: admin_order_path, method: :patch do |f| %>
            <%= f.select :status, Order.statuses.keys.map {|k| [I18n.t("enums.order.status.#{k}"), k]} %>
            <%= f.submit "更新" %>
          <% end %>
        </td>
      </tr>
    </table>

    <div class="container">
      <div class="row">
        <div class="col-7 ml-5">
          <table class="table">
            <thead class="table-dark">
              <tr>
                <th>商品名</th>
                <th>単価（税込）</th>
                <th>数量</th>
                <th>小計</th>
                <th>制作ステータス</th>
              </tr>
            </thead>
            <tbody>
              <% @order.order_items.each do |order_item| %>
                <% @total = 0 %><!-- <商品ごとの小計の計算が必要になる。そのため、49行目と50行目に新しい計算式を追記 -->
                <% @total += order_item.price * order_item.amount %><!-- これらの計算式を使えば55行目の@totalで小計が出せる-->
              <tr>　　　　　　　　　　　　　　　　　　　　　　　　<!-- モデルやコントローラーに何かを記載する必要は無い。ビューだけで計算できる-->
                <td><%= order_item.item.name %></td>
                <td><%= order_item.item.with_tax_price.to_s(:delimited) %>円</td>
                <td><%= order_item.amount %></td>
                <td><%= @total.to_s(:delimited) %></td><!-- ここに上の計算式の結果が反映されている -->
                <td>
                  <%= form_with model: order_item, url: admin_order_item_path(order_item), method: :patch do |f| %>
                    <%= f.select :production_status, OrderItem.production_statuses.keys.map {|k| [I18n.t("enums.order_item.production_status.#{k}"), k]} %>
                    <%= f.submit "更新" %>
                  <% end %>
                </td>
              </tr>
              <% end %>
            </tbody>
          </table>
        </div>
        <div class="col-3">
          <table>
            <tr>
              <th>商品合計</th>
              <td><%= @total.to_s(:delimited)%>
                  <%#= @order.items_price.to_s(:delimited) %>円</td>
            </tr>
            <tr>
              <th>送料</th>
              <td><%= @order.shipping_cost.to_s(:delimited) %>円</td>
            </tr>
            <tr>
              <th>請求金額合計</th>
              <td><%= (@order.total_payment + @order.shipping_cost).to_s(:delimited) %>円</td>
            </tr>
          </table>

        </div>
      </div>
    </div>
